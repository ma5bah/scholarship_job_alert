name: Deploy Main Branch

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pnpm
        run: |
          npm install -g pnpm
      - name : Install Dependencies
        run: |
          pnpm install
      - name: Copy Production Environment
        run: |
          cp .production.env .env
      - name: Build Project
        run: |
          node build.js;
      - name: Install Necessary Packages
        run: |
          sudo apt install tar -y
      - name: Compressing necessary files
        run: |
          tar -czvf dist.tar.gz output.js production.config.js;
      - name: Configure SSH
        run: |
            mkdir -p ~/.ssh/
            echo "$SSH_KEY" > ~/.ssh/production_secret.key
            chmod 600 ~/.ssh/production_secret.key
            cat >>~/.ssh/config <<END
            Host production_server
              HostName $SSH_HOST
              User $SSH_USER
              IdentityFile ~/.ssh/production_secret.key
              StrictHostKeyChecking no
            END
        env:
            SSH_USER: ${{ secrets.PRODUCTION_SSH_USER }}
            SSH_KEY: ${{ secrets.PRODUCTION_SSH_KEY }}
            SSH_HOST: ${{ secrets.PRODUCTION_SSH_HOST }}
      - name: Copy dist.tar.gz to production server
        run: |
          scp dist.tar.gz production_server:~/vector_classes_management_system/ && rm dist.tar.gz;
      - name: Install necessary packages on production server
        run: |
          ssh production_server << EOF
            sudo apt install tar lsof postgresql-client -y;
            sudo npm install -g pm2 pnpm;
          EOF
      - name: Clear dist folder on production server
        run: |
          ssh production_server << EOF
          cd ~/vector_classes_management_system;
          rm -rf dist;
          EOF
      - name: Extract dist.tar.gz on production server
        run: |
          ssh production_server << EOF
          cd ~/vector_classes_management_system;
          tar -xzvf dist.tar.gz;
          rm dist.tar.gz;
          EOF
      - name: Install necessary nodejs packages on production server
        run: |
          ssh production_server << EOF
          cd ~/vector_classes_management_system;
          cp ~/.local/share/pnpm/global/*/node_modules/@prisma/engines/libquery_engine* .;
          EOF
      - name: Restarting PM2 on production server
        run: |
          ssh production_server << EOF
          cd ~/vector_classes_management_system;
          pm2 restart production.config.js;
          EOF


